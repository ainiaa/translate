/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package translate;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author Administrator
 */
public class TranslateJFrame extends javax.swing.JFrame {

    private static String cfgFileName = "ja_jp.php";

    /**
     * Creates new form TranslateJFrame
     */
    public TranslateJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        globalReplacebuttonGroup = new javax.swing.ButtonGroup();
        selectConfgFilejPanel = new javax.swing.JPanel();
        configFilejLabel = new javax.swing.JLabel();
        configFilejTextField = new javax.swing.JTextField();
        configFilejButton = new javax.swing.JButton();
        templetjLabel = new javax.swing.JLabel();
        templetjTextField = new javax.swing.JTextField();
        templetjButton = new javax.swing.JButton();
        outputjLabel = new javax.swing.JLabel();
        outputjButton = new javax.swing.JButton();
        outputjTextField = new javax.swing.JTextField();
        sheetIndexjLabel = new javax.swing.JLabel();
        sheetIndexjTextField = new javax.swing.JTextField();
        globalReplacejLabel = new javax.swing.JLabel();
        globalReplacejRadioButtonYES = new javax.swing.JRadioButton();
        globalReplacejRadioButtonNO = new javax.swing.JRadioButton();
        targetColumnjLabel = new javax.swing.JLabel();
        targetColumnjTextField = new javax.swing.JTextField();
        destinationColumnjLabel = new javax.swing.JLabel();
        destinationColumnjTextField = new javax.swing.JTextField();
        destinationFileNamejLabel = new javax.swing.JLabel();
        destinationFileNamejTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        parsejButton = new javax.swing.JButton();
        closejButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectConfgFilejPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("选择配置文件"));

        configFilejLabel.setText("配置文件(xls)：");

        configFilejTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configFilejTextFieldMouseClicked(evt);
            }
        });

        configFilejButton.setText("浏览");
        configFilejButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configFilejButtonMouseClicked(evt);
            }
        });

        templetjLabel.setText("模板文件(PHP)：");

        templetjTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                templetjTextFieldMouseClicked(evt);
            }
        });

        templetjButton.setText("浏览");
        templetjButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                templetjButtonMouseClicked(evt);
            }
        });

        outputjLabel.setText("输出目录(PHP)：");

        outputjButton.setText("浏览");
        outputjButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outputjButtonMouseClicked(evt);
            }
        });

        outputjTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outputjTextFieldMouseClicked(evt);
            }
        });

        sheetIndexjLabel.setText("XML sheet编号：");

        sheetIndexjTextField.setText("0");

        globalReplacejLabel.setText("全局替换：");

        globalReplacebuttonGroup.add(globalReplacejRadioButtonYES);
        globalReplacejRadioButtonYES.setText("是");
        globalReplacejRadioButtonYES.setActionCommand("YES");
        globalReplacejRadioButtonYES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                globalReplacejRadioButtonYESMouseClicked(evt);
            }
        });

        globalReplacebuttonGroup.add(globalReplacejRadioButtonNO);
        globalReplacejRadioButtonNO.setSelected(true);
        globalReplacejRadioButtonNO.setText("否");
        globalReplacejRadioButtonNO.setActionCommand("NO");

        targetColumnjLabel.setText("目标列：");

        destinationColumnjLabel.setText("目的列：");

        destinationFileNamejLabel.setText("目的文件名：");

        javax.swing.GroupLayout selectConfgFilejPanelLayout = new javax.swing.GroupLayout(selectConfgFilejPanel);
        selectConfgFilejPanel.setLayout(selectConfgFilejPanelLayout);
        selectConfgFilejPanelLayout.setHorizontalGroup(
            selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                        .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(templetjLabel)
                            .addComponent(configFilejLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(configFilejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(templetjTextField)))
                    .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                        .addComponent(outputjLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(configFilejButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(templetjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(globalReplacejLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(globalReplacejRadioButtonYES)
                        .addGap(18, 18, 18)
                        .addComponent(globalReplacejRadioButtonNO))
                    .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                                .addComponent(destinationFileNamejLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(destinationFileNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                                    .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(targetColumnjLabel)
                                        .addComponent(sheetIndexjLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(sheetIndexjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                        .addComponent(targetColumnjTextField)))
                                .addGroup(selectConfgFilejPanelLayout.createSequentialGroup()
                                    .addGap(42, 42, 42)
                                    .addComponent(destinationColumnjLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(destinationColumnjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        selectConfgFilejPanelLayout.setVerticalGroup(
            selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectConfgFilejPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(globalReplacejLabel)
                    .addComponent(globalReplacejRadioButtonYES)
                    .addComponent(globalReplacejRadioButtonNO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sheetIndexjLabel)
                    .addComponent(sheetIndexjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(targetColumnjLabel)
                    .addComponent(targetColumnjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationColumnjLabel)
                    .addComponent(destinationColumnjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationFileNamejLabel)
                    .addComponent(destinationFileNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configFilejLabel)
                    .addComponent(configFilejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(configFilejButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(templetjLabel)
                    .addComponent(templetjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(templetjButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectConfgFilejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputjLabel)
                    .addComponent(outputjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputjButton))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("操作"));

        parsejButton.setText("解析");
        parsejButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parsejButtonMouseClicked(evt);
            }
        });

        closejButton.setText("取消");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(parsejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(closejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parsejButton)
                    .addComponent(closejButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectConfgFilejPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectConfgFilejPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void parsejButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parsejButtonMouseClicked

        //功能选择
        String func = "";
        if (globalReplacebuttonGroup.getSelection() != null) {
            func = globalReplacebuttonGroup.getSelection().getActionCommand();
        }

        String targetColumn = targetColumnjTextField.getText().trim();
        String destinationColumn = destinationColumnjTextField.getText().trim();
        int targetColunmIndex = Integer.valueOf(targetColumn);
        int destinationColumnIndex = Integer.valueOf(destinationColumn);

        if ("NO".equals(func)) {//单个sheet替换
            //sheet编号
            int sheetIndex = Integer.parseInt(sheetIndexjTextField.getText().trim());

            //配置文件
            String configFilePath = configFilejTextField.getText();

            //模板文件
            String templet = templetjTextField.getText();

            //输出路径
            String outputPath = outputjTextField.getText();

            String fileName = destinationFileNamejTextField.getText().trim();
            if (!fileName.isEmpty()) {
                cfgFileName = fileName;
            }

            String msg = "";
            if (!msg.isEmpty()) {
                JOptionPane.showMessageDialog(null, msg, "信息提示", JOptionPane.ERROR_MESSAGE);
            }

            try {
                String[][] xmlTranslate = parseXls(configFilePath, sheetIndex);
                File fileOutput = new File(outputPath + "/" + cfgFileName);
                String template = TranslateJFrame.loadFileToString(new File(templet));
                String finalCfg = TranslateJFrame.translate(template, xmlTranslate, sheetIndex, targetColunmIndex, destinationColumnIndex);
                writeToFile(finalCfg, fileOutput, "UTF-8");
            } catch (IOException ex) {
                Logger.getLogger(TranslateJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BiffException ex) {
                Logger.getLogger(TranslateJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null, "转换成功", "转换提示", JOptionPane.INFORMATION_MESSAGE);
        } else {//全局替换
            //配置文件
            String configFilePath = configFilejTextField.getText();

            //模板文件
            String templet = templetjTextField.getText();

            TranslateJFrame.refreshFileList(templet);

            ArrayList cleanedFileList = TranslateJFrame.cleanFileList();
            int cleanedFileCount = cleanedFileList.size();
            for (int fileIndex = 0; fileIndex < cleanedFileCount; fileIndex++) {
                Workbook workbook;
                try {
                    String fileInfo = (String) cleanedFileList.get(fileIndex);
                    File file = new File(fileInfo);
                    String filePath = file.getParent();
                    workbook = Workbook.getWorkbook(new File(configFilePath));
                    int sheetCount = workbook.getNumberOfSheets();
                    for (int sheetIndex = 0; sheetIndex < sheetCount - 1; sheetIndex++) {
                        String[][] xmlTranslate = parseXls(configFilePath, sheetIndex);
                        System.out.println("fileOutput:" + filePath + "/" + cfgFileName);
                        File fileOutput = new File(filePath + "/" + cfgFileName);
                        String template = TranslateJFrame.loadFileToString(fileOutput);
                        String finalCfg = TranslateJFrame.translate(template, xmlTranslate, sheetIndex, targetColunmIndex, destinationColumnIndex);
                        writeToFile(finalCfg, fileOutput, "UTF-8");
                    }

                } catch (IOException ex) {
                    Logger.getLogger(TranslateJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (BiffException ex) {
                    Logger.getLogger(TranslateJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        this.dispose();

    }//GEN-LAST:event_parsejButtonMouseClicked

    private static ArrayList cleanFileList() {
        ArrayList<String> cleanedFileList = new ArrayList<String>();
        int fileCount = filelist.size();
        for (int fileIndex = 0; fileIndex < fileCount; fileIndex++) {
            String fileInfo = (String) filelist.get(fileIndex);
            File file = new File(fileInfo);
            String fileName = file.getName();
            if (fileName.equals(cfgFileName)) {
                cleanedFileList.add(fileInfo);
            }
        }
        return cleanedFileList;
    }

    private void globalReplacejRadioButtonYESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_globalReplacejRadioButtonYESMouseClicked
        sheetIndexjTextField.setText("-1");
        outputjTextField.setVisible(false);
        outputjLabel.setVisible(false);
        outputjButton.setVisible(false);
        this.repaint();
    }//GEN-LAST:event_globalReplacejRadioButtonYESMouseClicked

    private void outputjTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outputjTextFieldMouseClicked
        // TODO add your handling code here:
        File f = new File(".");
        JFileChooser jfc = new JFileChooser(f);
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result;
        result = jfc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            outputjTextField.setText(file.getPath());
        }
    }//GEN-LAST:event_outputjTextFieldMouseClicked

    private void outputjButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outputjButtonMouseClicked
        this.outputjTextFieldMouseClicked(evt);
    }//GEN-LAST:event_outputjButtonMouseClicked

    private void templetjButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_templetjButtonMouseClicked
        this.outputjTextFieldMouseClicked(evt);
    }//GEN-LAST:event_templetjButtonMouseClicked

    private void templetjTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_templetjTextFieldMouseClicked
        File f = new File("D:\\www\\flowershop-dev\\flowershop_us-dev\\branches\\dev_lwy\\app\\configs");
        JFileChooser jfc = new JFileChooser(f);
        int result;
        //功能选择
        String func = "";
        if (globalReplacebuttonGroup.getSelection() != null) {
            func = globalReplacebuttonGroup.getSelection().getActionCommand();
        }
        if ("YES".equals(func)) {
            jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }
        result = jfc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            templetjTextField.setText(file.getPath());
        }
    }//GEN-LAST:event_templetjTextFieldMouseClicked

    private void configFilejButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configFilejButtonMouseClicked
        // TODO add your handling code here:
        this.configFilejTextFieldMouseClicked(evt);
    }//GEN-LAST:event_configFilejButtonMouseClicked

    private void configFilejTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configFilejTextFieldMouseClicked
        File f = new File(".");
        JFileChooser jfc = new JFileChooser(f);
        int result;
        result = jfc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            configFilejTextField.setText(file.getPath());
        }
    }//GEN-LAST:event_configFilejTextFieldMouseClicked

    public static String loadFileToString(File f) throws IOException {
//        long beginTime = System.currentTimeMillis();
        BufferedReader br = null;
        String ret = null;
        try {
//            br = new BufferedReader(new FileReader(f));//这个样子会出现中文乱码问题
            br = new BufferedReader(new InputStreamReader(new FileInputStream(f), "UTF-8"));
            String line;
            StringBuilder sb = new StringBuilder((int) f.length());
            while ((line = br.readLine()) != null) {
                sb.append(line).append("\r\n");
            }
            ret = sb.toString();
        } finally {
            if (br != null) {
                try {
                    br.close();
                } catch (Exception e) {
                }
            }
        }
//        long endTime = System.currentTimeMillis();
//        System.out.println("方法3用时" + (endTime - beginTime) + "ms");
        return ret;
    }

    /**
     * 翻译 --- 将目标列的内容替换成目的内容
     *
     * @param template
     * @param content
     * @param sheetIndex
     * @param targetIndex
     * @param descIndex
     * @return
     */
    public static String translate(String template, String[][] content, int sheetIndex, int targetIndex, int descIndex) {
        int rows = content.length;

//        int targetIndex = 0;//目标列数(从0开始计数)
//        int descIndex = 1;//目的列数(从0开始计数)
        for (int rowNum = 0; rowNum < rows; rowNum++) {
            String targetColContent = content[rowNum][targetIndex];//目标Col内容
            String descColContent = content[rowNum][descIndex];//目的Col内容
            if (!targetColContent.trim().equals("")) {
                //将  形为 => '%s' 替换为 => '%s',  --转义单引号 
                String targetContent = "=> '" + TranslateJFrame.replace(targetColContent, "'", "\\'") + "'";
                String descContent = "=> '" + TranslateJFrame.replace(descColContent, "'", "\\'") + "'";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 '%s' 替换为 '%s',  --转义单引号 
                targetContent = "'" + TranslateJFrame.replace(targetColContent, "'", "\\'") + "',";
                descContent = "'" + TranslateJFrame.replace(descColContent, "'", "\\'") + "',";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 => "%s" 替换为 => "%s",  --转义单引号 
                targetContent = "=> \"" + TranslateJFrame.replace(targetColContent, "'", "\\'") + "\"";
                descContent = "=> \"" + TranslateJFrame.replace(descColContent, "'", "\\'") + "\"";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 "%s" 替换为 "%s",  --转义单引号 
                targetContent = "\"" + TranslateJFrame.replace(targetColContent, "'", "\\'") + "\",";
                descContent = "\"" + TranslateJFrame.replace(descColContent, "'", "\\'") + "\",";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 => "%s" 替换为 => '%s',  --转义单引号 
                targetContent = "=> \"" + TranslateJFrame.replace(targetColContent, "'", "\\'") + "\"";
                descContent = "=> \'" + TranslateJFrame.replace(descColContent, "'", "\\'") + "\'";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 "%s" 替换为 '%s',  --转义单引号 
                targetContent = "\"" + TranslateJFrame.replace(targetColContent, "'", "\\'") + "\",";
                descContent = "\'" + TranslateJFrame.replace(descColContent, "'", "\\'") + "\',";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 => "%s" 替换为 => '%s',  
                targetContent = "=> \"" + targetColContent + "\"";
                descContent = "=> \'" + TranslateJFrame.replace(descColContent, "'", "\\'") + "\'";
                template = TranslateJFrame.replace(template, targetContent, descContent);

                //将  形为 "%s" 替换为 '%s',  
                targetContent = "\"" + targetColContent + "\",";
                descContent = "\'" + TranslateJFrame.replace(descColContent, "'", "\\'") + "\',";
                template = TranslateJFrame.replace(template, targetContent, descContent);
            }
        }
        return template;
    }

    public static String[][] parseXls(String filePath, int sheetNum) throws IOException, BiffException {
//        System.out.println(filePath);
        //通过Workbook的静态方法getWorkbook选取Excel文件
//        Workbook workbook = Workbook.getWorkbook(new File("D:\\www\\flowershop-dev\\flowershop_us-dev\\Configuration Settings\\upgradableBuilding.xls"));
        Workbook workbook = Workbook.getWorkbook(new File(filePath));
        //通过Workbook的getSheet方法选择第一个工作簿（从0开始）
        Sheet sheet = workbook.getSheet(sheetNum);
        int rows = sheet.getRows();
        int cols = sheet.getColumns();
        Cell cells[][] = new Cell[cols][rows];

        String[][] finalContents = new String[rows][cols];
        for (int i = 0; i < cols; i++) {
            for (int j = 0; j < rows; j++) {
                cells[i][j] = sheet.getCell(i, j);
                finalContents[j][i] = sheet.getCell(i, j).getContents();
            }
        }

        workbook.close();
        return finalContents;
    }

    public void writeToFile(String contents, File descFile, String encoding) throws UnsupportedEncodingException, FileNotFoundException, IOException {
        if (!descFile.exists()) {
            descFile.createNewFile();
        }
        Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(descFile), encoding));
        writer.write(contents);
        writer.flush();
        writer.close();
    }

    public static String replace(String strSource, String strFrom, String strTo) {
        if (strSource == null) {
            return null;
        }
        int i = 0;
        if ((i = strSource.indexOf(strFrom, i)) >= 0) {
            char[] cSrc = strSource.toCharArray();
            char[] cTo = strTo.toCharArray();
            int len = strFrom.length();
            StringBuilder buf = new StringBuilder(cSrc.length);
            buf.append(cSrc, 0, i).append(cTo);
            i += len;
            int j = i;
            while ((i = strSource.indexOf(strFrom, i)) > 0) {
                buf.append(cSrc, j, i - j).append(cTo);
                i += len;
                j = i;
            }
            buf.append(cSrc, j, cSrc.length - j);
            return buf.toString();
        }
        return strSource;
    }

    public static void refreshFileList(String strPath) {
        File dir = new File(strPath);
        File[] files = dir.listFiles();
        if (files == null) {
            return;
        }

        for (int i = 0; i < files.length; i++) {
            if (files[i].isDirectory()) {
                refreshFileList(files[i].getAbsolutePath());
            } else {
                String strFileName = files[i].getAbsolutePath().toLowerCase();
//                System.out.println("---" + strFileName);
                filelist.add(files[i].getAbsolutePath());
                System.out.println("refreshFileList:" + files[i].getAbsolutePath());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    java.util.logging.Logger.getLogger(TranslateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    java.util.logging.Logger.getLogger(TranslateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    java.util.logging.Logger.getLogger(TranslateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(TranslateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                TranslateJFrame translateJFrame = new TranslateJFrame();
                translateJFrame.setLocationRelativeTo(null);
                translateJFrame.setVisible(true);
            }
        });
    }
    private static ArrayList<String> filelist = new ArrayList<String>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closejButton;
    private javax.swing.JButton configFilejButton;
    private javax.swing.JLabel configFilejLabel;
    private javax.swing.JTextField configFilejTextField;
    private javax.swing.JLabel destinationColumnjLabel;
    private javax.swing.JTextField destinationColumnjTextField;
    private javax.swing.JLabel destinationFileNamejLabel;
    private javax.swing.JTextField destinationFileNamejTextField;
    private javax.swing.ButtonGroup globalReplacebuttonGroup;
    private javax.swing.JLabel globalReplacejLabel;
    private javax.swing.JRadioButton globalReplacejRadioButtonNO;
    private javax.swing.JRadioButton globalReplacejRadioButtonYES;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton outputjButton;
    private javax.swing.JLabel outputjLabel;
    private javax.swing.JTextField outputjTextField;
    private javax.swing.JButton parsejButton;
    private javax.swing.JPanel selectConfgFilejPanel;
    private javax.swing.JLabel sheetIndexjLabel;
    private javax.swing.JTextField sheetIndexjTextField;
    private javax.swing.JLabel targetColumnjLabel;
    private javax.swing.JTextField targetColumnjTextField;
    private javax.swing.JButton templetjButton;
    private javax.swing.JLabel templetjLabel;
    private javax.swing.JTextField templetjTextField;
    // End of variables declaration//GEN-END:variables
}
